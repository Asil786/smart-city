global:
  keycloak:
    authServerUrl: http://anett-xmg-fusion-15-xfu15l19/cityos-auth

replicaCount: 1

image:
  repository: ghcr.io/chtew/hackathon-digiweek-wob
  tag: "v2.2.1"
  pullPolicy: Always

imagePullSecrets:
  - name: github-pull-secret
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8081

serviceAccount:
  create: false
autoscaling:
  enabled: false

initContainers:
  wait4mariadb:
    image: busybox
    tag: latest
  curl:
    image: curlimages/curl
    tag: latest

# add extra environment params to app server
#extraEnv: |
#  - name: MY_PARAM
#    value: value

# adapt if other ingress controller as traefik is used.
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  
  hosts:
    - host: anett-xmg-fusion-15-xfu15l19
  tls:
    - secretName: host-tls
      hosts:
        - anett-xmg-fusion-15-xfu15l19

  startupScripts:
    # cli script that reconfigures WildFly
    contextPath.cli: |
      embed-server --server-config=standalone-ha.xml --std-out=echo
      batch
      {{- if ne .Values.contextPath "auth" }}
      /subsystem=keycloak-server/:write-attribute(name=web-context,value={{ if eq .Values.contextPath "" }}/{{ else }}{{ .Values.contextPath }}{{ end }})
      {{- if eq .Values.contextPath "" }}
      /subsystem=undertow/server=default-server/host=default-host:write-attribute(name=default-web-module,value=keycloak-server.war)
      {{- end }}
      {{- end }}
      run-batch
      stop-embedded-server

mariadb:
  auth:
    rootPassword: root
    database: hackathon
    username: hackathon
    password: hackathon
  primary:
    service:
      ports:
        mysql: 3308

grafana:
  ingress:
    enabled: true
    hosts:
      - "anett-xmg-fusion-15-xfu15l19"
    path: "/grafana"
  imagerenderer:
    enabled: true
  env:
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'adminadmin'
      GF_AUTH_DISABLE_LOGIN_FORM: 'true'
      GF_AUTH_GENERIC_OAUTH_ENABLED: 'true'
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: 'true'
      GF_AUTH_GENERIC_OAUTH_NAME: 'OAuth'
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: 'citydashboard'
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: 'Viewer'
      GF_AUTH_GENERIC_OAUTH_SCOPES: 'openid profile email'
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: 'https://demo.city-os.eu/cityos-auth/realms/citydashboard/protocol/openid-connect/token'
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: 'https://demo.city-os.eu/cityos-auth/realms/citydashboard/protocol/openid-connect/auth'
      GF_AUTH_GENERIC_OAUTH_API_URL: 'https://demo.city-os.eu/cityos-auth/realms/citydashboard/protocol/openid-connect/userinfo'
      GF_AUTH_BASIC_ENABLED: 'false'
      GF_SECURITY_ALLOW_EMBEDDING: 'true'
      GF_AUTH_ANONYMOUS_ENABLED: 'false'



